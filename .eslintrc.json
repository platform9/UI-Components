{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:react/recommended",
        "standard-with-typescript"
    ],
    "overrides": [
    ],
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "plugins": [
        "react"
    ],
    "rules": {
        // eslint rules
        "no-restricted-imports": [
          "error",
          {
            "patterns": ["@material-ui/*/*/*", "!@material-ui/core/test-utils/*"]
          }
        ],
        "max-len": ["warn", { "code": 100, "tabWidth": 2 }],
        "semi": ["error", "never"],
        "comma-dangle": [
          "error",
          {
            "arrays": "only-multiline",
            "objects": "only-multiline",
            "imports": "only-multiline",
            "exports": "only-multiline",
            "functions": "only-multiline"
          }
        ],
        "jsx-quotes": "warn",
        "no-new": "off",
        "space-infix-ops": "off",
        "no-prototype-builtins": "off",
        "no-unused-vars": "off", // need to disable this for "@typescript-eslint/no-unused-vars" to work
        "no-loss-of-precision": "off", // need to disable this for "@typescript-eslint/no-loss-of-precision" to work
        "prefer-reflect": "off",
        "prefer-rest-params": "warn",
        "no-multi-spaces": [2, { "exceptions": { "ObjectExpression": true } }],
        "key-spacing": [2, { "mode": "minimum" }],
        "standard/no-callback-literal": 0,
        "no-use-before-define": "off",
        "space-before-function-paren": 0,
    
        "no-extra-boolean-cast": "off",
    
        // typscript rules
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-unused-vars": ["warn", { "varsIgnorePattern": "^_" }],
        "@typescript-eslint/no-loss-of-precision": ["warn"],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "none",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/no-empty-function": ["warn"],
        "@typescript-eslint/ban-ts-comment": ["warn"],
        "@typescript-eslint/no-empty-interface": [
          "off",
          {
            "allowSingleExtends": true
          }
        ],
        "@typescript-eslint/ban-types": [
          "warn",
          {
            "extendDefaults": true,
            "types": {
              "String": true,
              "Boolean": true,
              "Number": true,
              "Symbol": true,
              "{}": true,
              "Object": true,
              "object": true,
              "Function": true
            }
          }
        ],
    
        // react rules
        "react/jsx-filename-extension": [2, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
        "react/prop-types": "off",
        "react/no-unused-prop-types": "warn",
        "react/display-name": "off",
        "react/jsx-key": "warn",
        "react/no-unescaped-entities": "warn",
        "react/no-children-prop": "warn"
      }
}
